# GitHub Actions Workflow for the Advanced Lead Generator
# This version gracefully handles missing Google Sheets secrets, falling back to CSV mode.
name: Run Advanced Lead Generator

# This workflow can be triggered manually from the Actions tab in GitHub
on:
  workflow_dispatch:
    inputs:
      location:
        description: 'Target Location (e.g., "San Francisco")'
        required: true
        default: 'Surabaya, Indonesia'
      sector:
        description: 'Target Sector (e.g., "Technology")'
        required: true
        default: 'Manufactoring'
      num_companies:
        description: 'Number of companies to generate'
        required: true
        default: '30'
      workers:
        description: 'Number of parallel workers'
        required: true
        default: '5'

jobs:
  generate-leads:
    runs-on: ubuntu-latest
    
    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4
        with:
          # Fetch all history to enable pushing changes back to the repo
          fetch-depth: 0

      - name: 2. Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: 3. Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 4. Run the Lead Generation Script
        # Secrets are injected as environment variables.
        # The script is designed to handle single or multiple comma-separated Gemini keys.
        env:
          GEMINI_API_KEYS: ${{ secrets.GEMINI_API_KEYS }}
          GOOGLE_SHEETS_SPREADSHEET_ID: ${{ secrets.GOOGLE_SHEETS_SPREADSHEET_ID }}
          GOOGLE_SHEETS_CREDENTIALS_JSON: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS_JSON }}
        run: |
          # --- Graceful Google Sheets Configuration ---
          # Conditionally create the credentials file ONLY if the secret exists.
          if [[ -n "$GOOGLE_SHEETS_CREDENTIALS_JSON" ]]; then
            echo "Google Sheets credentials found. Configuring for Sheets mode."
            echo "$GOOGLE_SHEETS_CREDENTIALS_JSON" > ./google-creds.json
            export GOOGLE_SHEETS_CREDENTIALS_PATH="./google-creds.json"
          else
            echo "Google Sheets credentials not found in secrets. Script will run in CSV fallback mode."
          fi
          
          echo "Starting Python script..."
          python main.py \
            --location "${{ github.event.inputs.location }}" \
            --sector "${{ github.event.inputs.sector }}" \
            --num_companies ${{ github.event.inputs.num_companies }} \
            --workers ${{ github.event.inputs.workers }}

      - name: 5. Configure Git for Commit
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions-bot@github.com"

      - name: 6. Commit and Push Updated Results
        run: |
          # Add the results file to the staging area. The directory must exist.
          if [ -f "lead_results/lead_results.csv" ]; then
            git add lead_results/lead_results.csv
          else
            echo "Results file not found. Nothing to commit."
            exit 0
          fi
          
          # Check if there are any staged changes to commit
          if git diff-index --quiet --cached HEAD --; then
            echo "No changes to commit. Working tree clean."
          else
            echo "Changes detected in results file. Committing and pushing..."
            git commit -m "feat: Update lead results via GitHub Actions"
            git push
          fi
